#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Aug 29, 2023 06:00:18 PM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import threading
import pyodbc 
import cx_Oracle

import PMR

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = PMR.Toplevel1(_top1)
    root.mainloop()

def button_click_start(*args):
        _w1.Scrolledtext1.delete(1.0, END)

        print('PMR_support.button_click_start')

        _w1.Button1.configure(state="disabled")
        _w1.Button3.configure(state="disabled")
        _w1.Spinbox1.configure(state='disable')
        _w1.Entry1.configure(state='disable')
        _w1.Entry2.configure(state='disable')
        _w1.Entry3.configure(state='disable')
        _w1.Entry4.configure(state='disable')

        
        sys.stdout.flush()
        global timer
        timer = threading.Timer(int(_w1.Spinbox1.get())*60, button_click_start)
        timer.start()
        run()

def button_click_stop(*args):
        _w1.Scrolledtext1.delete(1.0, END)

        print('PMR_support.button_click_stop')

        _w1.Button1.configure(state="normal")
        _w1.Button3.configure(state="normal")
        _w1.Spinbox1.configure(state='normal')
        _w1.Entry1.configure(state='normal')
        _w1.Entry2.configure(state='normal')
        _w1.Entry3.configure(state='normal')
        _w1.Entry4.configure(state='normal')
        _w1.Scrolledtext1.insert(INSERT,'已停止。\n將以上參數設好後，點擊啟用即可自動撈取工單。\n點擊BOM更新可自動撈取物料及BOM表更新。\n點擊停止可重新設定參數。')


        sys.stdout.flush()
        global timer
        if timer:
            timer.cancel()

def get_bom(*args):
        _w1.Scrolledtext1.delete(1.0, END)

        print('PMR_support.get_bom')
        _w1.Button1.configure(state="disabled")
        _w1.Button2.configure(state="disabled")        
        _w1.Button3.configure(state="disabled")
        part()
        bom()

        _w1.Button1.configure(state="normal")
        _w1.Button2.configure(state="normal")        
        _w1.Button3.configure(state="normal")


        sys.stdout.flush()





def run():

        erpNoField = 'SFB01'
        runStatusField = 'SFB04'
        partNoField = 'SFB05'
        qtyField = 'SFB08'
        schStartDField = "to_char(SFB13,'YYYY-MM-DD')"
        schStartTField = 'SFB14'
        schEndDField = "to_char(SFB15,'YYYY-MM-DD')"
        schEndTField = 'SFB16'
        length = 'NVL(ta_img02,1)'
        width = 'NVL(ta_img03,1000)'
        runcardqty=0

        

        conn = pyodbc.connect('Driver={SQL Server};Server=XXX.XXX.XX;Database=Database;UID=UID;PWD=PWD')
        cursor = conn.cursor()

        dsn_tns = cx_Oracle.makedsn('OracleServer', 'port', service_name='service_name') 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'.
        erpCon = cx_Oracle.connect(user=r'user', password='password', dsn=dsn_tns) 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        erpCur = erpCon.cursor()

        sfbField = [erpNoField, runStatusField, partNoField, qtyField, schStartDField, schStartTField, schEndDField, schEndTField, length, width ]
        # sql = "SELECT " + ", ".join(sfbField) + " FROM F002.sfb_file "
        sql = "SELECT " + ", ".join(sfbField) + " FROM OOO ON sfe01 = sfb_file.SFB01 and sfe_file.sfe07 = sfb_file.SFB05 LEFT JOIN img_file ON img01 = sfe07 and img02 = sfe08 and img03 = sfe09 and img04 = sfe10"
        erpCur.execute(sql)
        for card in erpCur:
            
            cursor.execute("SELECT part_id, uom FROM OOO WHERE part_no = ?", card[sfbField.index(partNoField)] )
            pType = card[sfbField.index(erpNoField)][:5]
            if pType ==  _w1.Entry2.get():
                partId = 'P2FPC'
                mchange = 1  
            elif pType == _w1.Entry1.get()  :
                partId = 'P1FCCL'
                int(erpCur.execute("select COUNT(ta_img02) from OOO where img01 = sfe07 and img02 = sfe08 and img03 = sfe09 and img04 = sfe10 and img01 = '"+ card[sfbField.index(partNoField)] +"' and sfe01 = '"+card[sfbField.index(erpNoField)]+"'" ))
                mchange = card[sfbField.index(width)]/1000

            elif pType == _w1.Entry3.get()  :
                partId = 'P1FCCL_PRO'     
                mchange = card[sfbField.index(width)]/1000
            elif pType == _w1.Entry4.get()  :
                partId = 'P1FCCL_PRO'   
                mchange = card[sfbField.index(width)]/1000
            else: 
                partId = cursor.fetchone()
            if partId is not None:
                if pType == _w1.Entry2.get() or pType == _w1.Entry1.get() or pType == _w1.Entry3.get() or pType == _w1.Entry4.get():
                    cursor.execute("SELECT std_routing_id FROM OOO WHERE std_routing_no = ?", partId)
                stdRoutingId = cursor.fetchone()
                if stdRoutingId is not None:
                    cursor.execute("SELECT runcard_id, run_state_id, mfo_routing_id FROM OOO WHERE erp_order_no = ?", card[sfbField.index(erpNoField)])
                    runcardId = cursor.fetchone()
                    sDt = f"{card[sfbField.index(schStartDField)]} {card[sfbField.index(schStartTField)]}"
                    eDt = f"{card[sfbField.index(schEndDField)]} {card[sfbField.index(schEndTField)]}"
                    if runcardId is None:


                        state = 8
                        if int(card[sfbField.index(runStatusField)]) < 5:
                            if int(card[sfbField.index(runStatusField)]) > 1:
                                state = 1 


                            cursor.execute('''
                                        IF  (SELECT COUNT([erp_order_no])FROM OOO  WHERE erp_order_no = ? ) = 0 
                                        BEGIN
                                        EXEC OOO
                                            @mfo_routing_id = 0,
                                            @std_routing_id = ?
                                            END
                            
                            ''', card[sfbField.index(erpNoField)], stdRoutingId[0])
                            conn.commit()
                            cursor.execute('''SELECT TOP 1 mfo_routing_id FROM OOO WHERE origin_std_routing_id = ? ORDER BY mfo_routing_id DESC''', stdRoutingId[0])
                            mfoRoutingId = cursor.fetchone()

                            cursor.execute('''
                                    INSERT INTO mes.runcard(mfo_routing_id, run_state_id, erp_order_no, runcard_no, quantity, unit, is_pick_requistion, schd_start_dt, schd_end_dt, update_dt, runcard_type_id)
                                    VALUES(?, ?, ?, ?, ?, ?, 0, ?, ?, GETDATE(), 1)
                            ''', mfoRoutingId[0], state, card[sfbField.index(erpNoField)], card[sfbField.index(erpNoField)], (card[sfbField.index(qtyField)])/mchange, partId[1], sDt, eDt)



                            runcardqty+=1
                            _w1.Scrolledtext1.insert(INSERT,f"runcard {card[sfbField.index(erpNoField)]} already INSERT"+'\n')

                            conn.commit()
                    else: # TODO update
                        if int(runcardId[1]) == 8 or int(runcardId[1]) == 1:
                            state = 8
                            if int(card[sfbField.index(runStatusField)]) < 5:
                                if int(card[sfbField.index(runStatusField)]) > 1:
                                    state = 1 
                                cursor.execute('''UPDATE mes.runcard 
                                                    SET run_state_id = ?, 
                                                        erp_order_no = ?,
                                                        runcard_no = ?, 
                                                        quantity = ?, 
                                                        schd_start_dt = ?, 
                                                        schd_end_dt = ? ,
                                                        update_dt = GETDATE()
                                                        WHERE runcard_id = ?''', state, card[sfbField.index(erpNoField)], card[sfbField.index(erpNoField)], card[sfbField.index(qtyField)]/mchange, sDt, eDt, runcardId[0])
                                conn.commit()
                                cursor.execute('''SELECT part_id OOO WHERE mfo_routing_id = ?''', runcardId[2])
                                runcardPard = cursor.fetchone()
                                
                        else:     
                            print(f"runcard {card[sfbField.index(erpNoField)]} already start")
                            
                    


                else:
                    print(f"stdRoutingId part {partId[0]} not found")

            else:
                print(f"partNo {card[sfbField.index(partNoField)]} not found")

        _w1.Scrolledtext1.insert(INSERT,f"串聯到的工單有{runcardqty}筆，自動添增MES系統工單。")
        erpCur.close()
        erpCon.close()
        cursor.close()
        conn.close()



def part():
        partNoField = 'IMA01'
        partNameField = 'IMA02'
        partDescField = 'IMA021'
        partUomField = 'IMA25'
        partTypeField = 'IMA06'
        partqty=0

        conn = pyodbc.connect('Driver={SQL Server};Server=XXX.XXX.XXX.XX;Database=MESDatabase;UID=UID;PWD=PWD')
        cursor = conn.cursor()

        dsn_tns = cx_Oracle.makedsn('OracleServer', 'port', service_name='service_name') 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'.
        erpCon = cx_Oracle.connect(user=r'user', password='password', dsn=dsn_tns) 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        erpCur = erpCon.cursor()

        partField = [partNoField, partNameField, partTypeField, partDescField, partUomField]

        sql = "select " + ", ".join(partField) + " from (select * from \"F002\".\"IMA_FILE\")"
        erpCur.execute(sql)
        for row in erpCur:
            cursor.execute('SELECT part_id FROM OOO WHERE part_no = ?', row[partField.index(partNoField)])

            partId = cursor.fetchone()
            if partId is None:
                cursor.execute('SELECT part_type_id FROM OOO WHERE part_type_no = ?', row[partField.index(partTypeField)])
                typeId = cursor.fetchone()
                if typeId is None:
                    cursor.execute("INSERT INTO OOO (part_type_no, part_type_name, is_delete) VALUES (?, ?, 0)",
                                    row[partField.index(partTypeField)], row[partField.index(partTypeField)])
                    conn.commit()
                    cursor.execute('SELECT part_type_id FROM OOO WHERE part_type_no = ?', row[partField.index(partTypeField)])
                    typeId = cursor.fetchone()

                cursor.execute("INSERT INTO OOO (part_no, part_name, part_type_id, description, uom, is_delete, update_dt, create_dt) VALUES (?, ?, ?, ?, ?, 0, GETDATE(), GETDATE())",
                                row[partField.index(partNoField)], row[partField.index(partNameField)], typeId[0], row[partField.index(partDescField)], row[partField.index(partUomField)])
                partqty+=1
                _w1.Scrolledtext1.insert(INSERT,f"part {row[partField.index(partNoField)]} already INSERT"+'\n')
                conn.commit()  

        _w1.Scrolledtext1.insert(INSERT,f"串聯到的產品有{partqty}筆，自動添增MES系統產品。"+'\n')
        erpCur.close()
        erpCon.close()
        cursor.close()
        conn.close()

def bom():
        bmaPartNo = 'BMA01'
        bmbParentPartNo = 'BMB01'
        bmbLevel = 'BMB02'
        bmbPartNo = 'BMB03'
        bmbUsage = 'BMB06'
        bmbUom = 'BMB10'
        bomqty=0

        conn = pyodbc.connect('Driver={SQL Server};Server=XXX.XXX.XXX.XX;Database=MESDatabase;UID=UID;PWD=PWD')
        cursor = conn.cursor()

        dsn_tns = cx_Oracle.makedsn('OracleServer', 'port', service_name='service_name') 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'.
        erpCon = cx_Oracle.connect(user=r'user', password='password', dsn=dsn_tns) 
        # if needed, place an 'r' before any parameter in order to address special characters such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        erpCur = erpCon.cursor()

        # Bma 
        bmaField = [bmaPartNo]
        sql = "select "+ ", ".join(bmaField) +" from (select * from \"F002\".\"BMA_FILE\")"
        erpCur.execute(sql)

        for bma in erpCur:
            cursor.execute("SELECT part_id FROM OOO WHERE part_no = ?", bma[bmaField.index(bmaPartNo)])
            partId = cursor.fetchone()
            if partId is not None:
                cursor.execute("SELECT bom_id FROM OOO WHERE part_id = ? AND parent_part_id IS NULL", partId[0])
                bomId = cursor.fetchone()
                if bomId is None:
                    cursor.execute("INSERT INTO OOO (part_id, usage) VALUES (?, 0)", partId[0])
                    bomqty+=1
                    _w1.Scrolledtext1.insert(INSERT,f"bom {bmb[bmbField.index(bmbPartNo)]} already INSERT"+'\n')
                    conn.commit()

            else:
                print(f"Part {bma[bmaField.index(bmaPartNo)]} not found")

        # Bmb

        bmbField = [bmbParentPartNo, bmbLevel, bmbPartNo, bmbUsage, bmbUom]
        sql = "select "+ ", ".join(bmbField) +" from (select * from \"F002\".\"BMB_FILE\")"
        erpCur.execute(sql)

        for bmb in erpCur:
            cursor.execute("SELECT part_id FROM OOO WHERE part_no = ?", bmb[bmbField.index(bmbParentPartNo)])
            parentPartId = cursor.fetchone()
            cursor.execute("SELECT part_id FROM OOO WHERE part_no = ?", bmb[bmbField.index(bmbPartNo)])
            partId = cursor.fetchone()
            if parentPartId is None:
                print(f"Parent Part {bmb[bmbField.index(bmbParentPartNo)]} not found")
            elif partId is None:
                print(f"Part {bmb[bmbField.index(bmbPartNo)]} not found")
            else:
                if bmb[bmbField.index(bmbLevel)] == '10':
                    cursor.execute("DELETE FROM OOO WHERE parent_part_id = ?", parentPartId[0])
                    conn.commit()
                cursor.execute("INSERT INTO OOO (part_id, parent_part_id, usage, uom) VALUES (?, ?, ?, ?)"
                                , partId[0], parentPartId[0], bmb[bmbField.index(bmbUsage)], bmb[bmbField.index(bmbUom)])
                conn.commit()
                
        _w1.Scrolledtext1.insert(INSERT,f"串聯到的BOM有{bomqty}筆，自動添增MES系統BOM。"+'\n')        
        erpCur.close()
        erpCon.close()
        cursor.close()
        conn.close()


if __name__ == '__main__':
    PMR.start_up()




